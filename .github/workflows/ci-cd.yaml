name: CI/CD to OCI OKE

on:
  # push:
  #   branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to OCIR
        run: |
          echo "${{ secrets.OCI_AUTH_TOKEN }}" | docker login ${{ secrets.OCIR_REGISTRY }} -u "${{ secrets.OCI_USERNAME }}" --password-stdin

      - name: Build & Push Docker image
        run: |
          IMAGE=${{ secrets.OCIR_REGISTRY }}/${{ secrets.OCIR_NAMESPACE }}/demo-app:${{ github.sha }}
          docker build -t $IMAGE ./app
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure OCI CLI
        run: |
          mkdir -p ~/.oci
          echo "${{ secrets.OCI_CLI_KEY }}" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          oci setup repair-file-permissions --file ~/.oci/oci_api_key.pem || true
          oci ce cluster create-kubeconfig --cluster-id ${{ secrets.OKE_CLUSTER_OCID }} --region ${{ secrets.OCI_REGION }} --file ~/.kube/config --token-version 2.0.0

      - name: Deploy to OKE
        run: |
          IMAGE=${{ env.IMAGE }}
          sed "s|REPLACE_IMAGE|$IMAGE|g" k8s/deployment.yaml | kubectl apply -f -
          kubectl apply -f k8s/service.yaml
