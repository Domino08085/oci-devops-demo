name: Security Scan


on:
  workflow_dispatch:

# on:
#   pull_request:
#     paths:
#       - 'terraform/**'
#       - 'bootstrap/**'
#       - 'k8s/**'
#       - '.trivyignore'
#       - 'checkov.yml'
#       - 'tools/analyze_security.py'
#   push:
#     branches: [ main ]
#     paths:
#       - 'terraform/**'
#       - 'bootstrap/**'
#       - 'k8s/**'

jobs:
  tf-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write 
      pull-requests: write 
      actions: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov==3.2.210
          mkdir -p results tools

      # Trivy – IaC (Terraform) scan and export to JSON
      # - name: Trivy (IaC) JSON
      #   uses: aquasecurity/trivy-action@0.28.0
      #   with:
      #     scan-type: config
      #     trivy-config: trivy.yaml
      #     exit-code: '0'
      #     format: 'json'
      #     output: 'results/trivy.json'
      #     hide-progress: true

      - name: Trivy (IaC) JSON terraform/
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: config
          format: json
          output: results/trivy-terraform.json
          exit-code: '0'
          hide-progress: true
          scan-ref: 'terraform/'

      - name: Trivy (IaC) JSON bootstrap/
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: config
          format: json
          output: results/trivy-bootstrap.json
          exit-code: '0'
          hide-progress: true
          scan-ref: 'bootstrap/'
      
      - name: Inspect Trivy JSON
        if: always()
        run: |
          for f in results/trivy-terraform.json results/trivy-bootstrap.json; do
            echo "== $f =="
            if [ -s "$f" ]; then
              jq -r '{results_count: ([.Results[]? | .Misconfigurations[]?] | length)}' "$f"
            else
              echo "missing or empty"
            fi
          done
          fi

      # Trivy – SARIF (for Code Scanning)
      - name: Trivy (IaC) SARIF
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: config
          trivy-config: trivy.yaml
          exit-code: '0'
          format: 'sarif'
          output: 'results/trivy.sarif'
          hide-progress: true
      
      - name: Inspect Trivy SARIF
        if: always()
        run: |
          echo "== Trivy SARIF results =="
          if [ -s results/trivy.sarif ]; then
            jq -r '
              {
                runs_count: (.runs | length),
                results_count: ([.runs[]?.results?] | add | length)
              }
            ' results/trivy.sarif
          else
            echo "trivy.sarif missing or empty"
          fi

      # Checkov – JSON (to aggregate and AI analyze)
      - name: Checkov (Terraform) JSON
        run: |
          mkdir -p results
          CKV_COLOR=false LOG_LEVEL=ERROR \
          checkov --config-file checkov.yml \
                  -o json -o sarif \
                  --output-file-path results/checkov.json,results/checkov.sarif \
                  --quiet || true

      - name: Debug Checkov output
        run: |
          ls -l results || true
          echo "----- checkov.json (first 200 chars) -----"
          head -c 200 results/checkov.json || true
          echo

      # Skrypt AI – aggregaation, prioritezation, gating
      - name: AI Analyze & Gate
        env:
          ENABLE_LLM: ${{ vars.ENABLE_LLM }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-4o-mini
        run: |
          chmod +x tools/analyze_security.py
          python3 tools/analyze_security.py

      # Upload SARIF to GitHub Code Scanning
      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/trivy.sarif
          category: trivy-iac
      
      - name: Upload Checkov SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/checkov.sarif
          category: checkov-iac

      # Artifacts: JSONs + report
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-results
          path: results/

      - name: Show AI report in Job Summary
        if: always()
        run: |
          echo "# Security Report " >> $GITHUB_STEP_SUMMARY
          if [ -f results/security_report.md ]; then
            cat results/security_report.md >> $GITHUB_STEP_SUMMARY
          else
            echo "Brak pliku results/security_report.md_" >> $GITHUB_STEP_SUMMARY
          fi

      # (Only for PRs) PR comment with summary
      - name: PR comment (summary)
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            ### Security report
            - Wyniki: artefakt **security-results** + Code Scanning (SARIF).
            - Raport AI: `results/security_report.md`
            > Merge zostanie zablokowany, jeśli wykryto problemy krytyczne (score ≥ 9).
