name: Deploy terraform modules

on:
  workflow_dispatch:

jobs:
  plan-terraform:
    environment: dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Write OCI API private key (PEM)
        run: |
          mkdir -p ~/.oci
          cat > ~/.oci/oci_api_key.pem <<'EOF'
          ${{ secrets.OCI_PRIVATE_KEY_PEM }}
          EOF
          chmod 600 ~/.oci/oci_api_key.pem

      - name: Write OCI config (DEFAULT profile)
        run: |
          cat > ~/.oci/config <<EOF
          [DEFAULT]
          user=${{ secrets.OCI_USER_OCID }}
          fingerprint=${{ secrets.OCI_FINGERPRINT }}
          tenancy=${{ secrets.OCI_TENANCY_OCID }}
          region=${{ secrets.OCI_REGION }}
          key_file=$HOME/.oci/oci_api_key.pem
          EOF
          chmod 600 ~/.oci/config

      - name: Sanity check OCI config & key
        run: |
          echo "Config file:"
          sed -n '1,50p' ~/.oci/config
          echo "Key header:"
          head -2 ~/.oci/oci_api_key.pem
          
      - name: Verify key fingerprint
        run: |
          openssl pkcs8 -in ~/.oci/oci_api_key.pem -inform PEM -nocrypt -outform DER \
            | openssl md5 -c

      - name: Terraform init + plan
        env:
          TF_IN_AUTOMATION: "1"
          TF_LOG: "INFO"            
          TF_LOG_PATH: "tf.log"
          TF_VAR_region:           ${{ secrets.OCI_REGION }}
          TF_VAR_tenancy_ocid:     ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          TF_VAR_user_ocid:        ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint:      ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key_pem:  ${{ secrets.OCI_PRIVATE_KEY_PEM }}
          TF_VAR_namespace:         ${{ secrets.OCIR_NAMESPACE }}
        run: |
          set -euxo pipefail
          terraform -version
          terraform init -input=false
          terraform validate
          terraform plan -input=false -out=tfplan
          echo "----- TF LOG TAIL -----"
          tail -n 200 tf.log || true

      - name: Upload tfplan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: terraform/tfplan
          
      - name: Upload OCI config and key
        uses: actions/upload-artifact@v4
        with:
          name: oci-config
          path: |
            ~/.oci/config
            ~/.oci/oci_api_key.pem

  terraform-apply:
    runs-on: ubuntu-latest
    needs: plan-terraform
    environment: dev
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Download OCI config and key
        uses: actions/download-artifact@v4
        with:
          name: oci-config
          path: ~/.oci

      - name: Download tfplan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: terraform

      - name: Terraform apply
        env:
          TF_IN_AUTOMATION: "1"
          TF_LOG: "INFO"            
          TF_LOG_PATH: "tf.log"
          TF_VAR_region:           ${{ secrets.OCI_REGION }}
          TF_VAR_tenancy_ocid:     ${{ secrets.OCI_TENANCY_OCID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}
          TF_VAR_user_ocid:        ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint:      ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key_pem:  ${{ secrets.OCI_PRIVATE_KEY_PEM }}
          TF_VAR_namespace:         ${{ secrets.OCIR_NAMESPACE }}
        run: |
          terraform apply -input=false -auto-approve tfplan
