apiVersion: v1
kind: Namespace
metadata:
  name: ${K8S_NAMESPACE}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-python-config
  namespace: ${K8S_NAMESPACE}
data:
  THEME_COLOR: "#eb8f1e"
  MESSAGE: "Hello from OKE + CI/CD!"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-python-app
  namespace: ${K8S_NAMESPACE}
  labels:
    app: demo-python-app
  annotations:
    ci.github.com/sha: "${GIT_SHA}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-python-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: demo-python-app
      annotations:
        # Prometheus scrape
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      imagePullSecrets:
        - name: ocir-pull
      containers:
        - name: demo-python-app
          image: ${IMAGE}
          ports:
            - containerPort: 8080
          env:
            # Build metadata from CI/CD
            - name: APP_NAME
              value: "demo-python-app"
            - name: APP_VERSION
              value: "${APP_VERSION}"
            - name: GIT_SHA
              value: "${GIT_SHA}"
            - name: BUILD_TIME
              value: "${BUILD_TIME}"
            - name: ENV_NAME
              value: "${ENV_NAME}"
            - name: BUILD_NUMBER
              value: "${BUILD_NUMBER}" 

            # ConfigMap
            - name: THEME_COLOR
              valueFrom:
                configMapKeyRef:
                  name: demo-python-config
                  key: THEME_COLOR
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: demo-python-config
                  key: MESSAGE

            # Downward API
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName

          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            periodSeconds: 5
            initialDelaySeconds: 3
            failureThreshold: 6

          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: demo-python-app
  namespace: ${K8S_NAMESPACE}
spec:
  type: LoadBalancer
  selector:
    app: demo-python-app
  ports:
    - port: 80
      targetPort: 8080
